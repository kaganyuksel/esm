#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.237
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ESM.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="esm")]
	public partial class ESMBDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertActores(Actores instance);
    partial void UpdateActores(Actores instance);
    partial void DeleteActores(Actores instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    partial void InsertAmbientes(Ambientes instance);
    partial void UpdateAmbientes(Ambientes instance);
    partial void DeleteAmbientes(Ambientes instance);
    partial void InsertConslAmbiente(ConslAmbiente instance);
    partial void UpdateConslAmbiente(ConslAmbiente instance);
    partial void DeleteConslAmbiente(ConslAmbiente instance);
    partial void InsertConslComponente(ConslComponente instance);
    partial void UpdateConslComponente(ConslComponente instance);
    partial void DeleteConslComponente(ConslComponente instance);
    partial void InsertConslPregunta(ConslPregunta instance);
    partial void UpdateConslPregunta(ConslPregunta instance);
    partial void DeleteConslPregunta(ConslPregunta instance);
    partial void InsertConslProceso(ConslProceso instance);
    partial void UpdateConslProceso(ConslProceso instance);
    partial void DeleteConslProceso(ConslProceso instance);
    partial void InsertConsolidacion(Consolidacion instance);
    partial void UpdateConsolidacion(Consolidacion instance);
    partial void DeleteConsolidacion(Consolidacion instance);
    partial void InsertConsultores(Consultores instance);
    partial void UpdateConsultores(Consultores instance);
    partial void DeleteConsultores(Consultores instance);
    partial void InsertEstadoEvaluacion(EstadoEvaluacion instance);
    partial void UpdateEstadoEvaluacion(EstadoEvaluacion instance);
    partial void DeleteEstadoEvaluacion(EstadoEvaluacion instance);
    partial void InsertEvaluacion(Evaluacion instance);
    partial void UpdateEvaluacion(Evaluacion instance);
    partial void DeleteEvaluacion(Evaluacion instance);
    partial void InsertInstitucionEducativa(InstitucionEducativa instance);
    partial void UpdateInstitucionEducativa(InstitucionEducativa instance);
    partial void DeleteInstitucionEducativa(InstitucionEducativa instance);
    partial void InsertMediciones(Mediciones instance);
    partial void UpdateMediciones(Mediciones instance);
    partial void DeleteMediciones(Mediciones instance);
    partial void InsertPreguntas(Preguntas instance);
    partial void UpdatePreguntas(Preguntas instance);
    partial void DeletePreguntas(Preguntas instance);
    partial void InsertPrivilegiados(Privilegiados instance);
    partial void UpdatePrivilegiados(Privilegiados instance);
    partial void DeletePrivilegiados(Privilegiados instance);
    partial void InsertProcesos(Procesos instance);
    partial void UpdateProcesos(Procesos instance);
    partial void DeleteProcesos(Procesos instance);
    partial void InsertResultados(Resultados instance);
    partial void UpdateResultados(Resultados instance);
    partial void DeleteResultados(Resultados instance);
    partial void InsertResultadosByEvaluacion(ResultadosByEvaluacion instance);
    partial void UpdateResultadosByEvaluacion(ResultadosByEvaluacion instance);
    partial void DeleteResultadosByEvaluacion(ResultadosByEvaluacion instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void InsertAyudaByPregunta(AyudaByPregunta instance);
    partial void UpdateAyudaByPregunta(AyudaByPregunta instance);
    partial void DeleteAyudaByPregunta(AyudaByPregunta instance);
    partial void InsertComponentes(Componentes instance);
    partial void UpdateComponentes(Componentes instance);
    partial void DeleteComponentes(Componentes instance);
    #endregion
		
		public ESMBDDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["esmConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ESMBDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ESMBDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ESMBDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ESMBDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Actores> Actores
		{
			get
			{
				return this.GetTable<Actores>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<Ambientes> Ambientes
		{
			get
			{
				return this.GetTable<Ambientes>();
			}
		}
		
		public System.Data.Linq.Table<Categorias> Categorias
		{
			get
			{
				return this.GetTable<Categorias>();
			}
		}
		
		public System.Data.Linq.Table<ConslAmbiente> ConslAmbiente
		{
			get
			{
				return this.GetTable<ConslAmbiente>();
			}
		}
		
		public System.Data.Linq.Table<ConslComponente> ConslComponente
		{
			get
			{
				return this.GetTable<ConslComponente>();
			}
		}
		
		public System.Data.Linq.Table<ConslPregunta> ConslPregunta
		{
			get
			{
				return this.GetTable<ConslPregunta>();
			}
		}
		
		public System.Data.Linq.Table<ConslProceso> ConslProceso
		{
			get
			{
				return this.GetTable<ConslProceso>();
			}
		}
		
		public System.Data.Linq.Table<Consolidacion> Consolidacion
		{
			get
			{
				return this.GetTable<Consolidacion>();
			}
		}
		
		public System.Data.Linq.Table<Consultores> Consultores
		{
			get
			{
				return this.GetTable<Consultores>();
			}
		}
		
		public System.Data.Linq.Table<EstadoEvaluacion> EstadoEvaluacion
		{
			get
			{
				return this.GetTable<EstadoEvaluacion>();
			}
		}
		
		public System.Data.Linq.Table<Evaluacion> Evaluacion
		{
			get
			{
				return this.GetTable<Evaluacion>();
			}
		}
		
		public System.Data.Linq.Table<InstitucionEducativa> InstitucionEducativa
		{
			get
			{
				return this.GetTable<InstitucionEducativa>();
			}
		}
		
		public System.Data.Linq.Table<Mediciones> Mediciones
		{
			get
			{
				return this.GetTable<Mediciones>();
			}
		}
		
		public System.Data.Linq.Table<Preguntas> Preguntas
		{
			get
			{
				return this.GetTable<Preguntas>();
			}
		}
		
		public System.Data.Linq.Table<Privilegiados> Privilegiados
		{
			get
			{
				return this.GetTable<Privilegiados>();
			}
		}
		
		public System.Data.Linq.Table<Procesos> Procesos
		{
			get
			{
				return this.GetTable<Procesos>();
			}
		}
		
		public System.Data.Linq.Table<Resultados> Resultados
		{
			get
			{
				return this.GetTable<Resultados>();
			}
		}
		
		public System.Data.Linq.Table<ResultadosByEvaluacion> ResultadosByEvaluacion
		{
			get
			{
				return this.GetTable<ResultadosByEvaluacion>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<AyudaByPregunta> AyudaByPregunta
		{
			get
			{
				return this.GetTable<AyudaByPregunta>();
			}
		}
		
		public System.Data.Linq.Table<Componentes> Componentes
		{
			get
			{
				return this.GetTable<Componentes>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actores")]
	public partial class Actores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdActor;
		
		private string _Actor;
		
		private EntitySet<Evaluacion> _Evaluacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdActorChanging(int value);
    partial void OnIdActorChanged();
    partial void OnActorChanging(string value);
    partial void OnActorChanged();
    #endregion
		
		public Actores()
		{
			this._Evaluacion = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacion), new Action<Evaluacion>(this.detach_Evaluacion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdActor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdActor
		{
			get
			{
				return this._IdActor;
			}
			set
			{
				if ((this._IdActor != value))
				{
					this.OnIdActorChanging(value);
					this.SendPropertyChanging();
					this._IdActor = value;
					this.SendPropertyChanged("IdActor");
					this.OnIdActorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actor", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Actor
		{
			get
			{
				return this._Actor;
			}
			set
			{
				if ((this._Actor != value))
				{
					this.OnActorChanging(value);
					this.SendPropertyChanging();
					this._Actor = value;
					this.SendPropertyChanged("Actor");
					this.OnActorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actores_Evaluacion", Storage="_Evaluacion", ThisKey="IdActor", OtherKey="IdActor")]
		public EntitySet<Evaluacion> Evaluacion
		{
			get
			{
				return this._Evaluacion;
			}
			set
			{
				this._Evaluacion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Actores = this;
		}
		
		private void detach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Actores = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private string _Usuario;
		
		private string _Contrasena;
		
		private string _Nombre;
		
		private string _Email;
		
		private System.Nullable<int> _IdRol;
		
		private EntitySet<Evaluacion> _Evaluacion;
		
		private EntityRef<Roles> _Roles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnContrasenaChanging(string value);
    partial void OnContrasenaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIdRolChanging(System.Nullable<int> value);
    partial void OnIdRolChanged();
    #endregion
		
		public Usuarios()
		{
			this._Evaluacion = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacion), new Action<Evaluacion>(this.detach_Evaluacion));
			this._Roles = default(EntityRef<Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contrasena", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Contrasena
		{
			get
			{
				return this._Contrasena;
			}
			set
			{
				if ((this._Contrasena != value))
				{
					this.OnContrasenaChanging(value);
					this.SendPropertyChanging();
					this._Contrasena = value;
					this.SendPropertyChanged("Contrasena");
					this.OnContrasenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRol", DbType="Int")]
		public System.Nullable<int> IdRol
		{
			get
			{
				return this._IdRol;
			}
			set
			{
				if ((this._IdRol != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRolChanging(value);
					this.SendPropertyChanging();
					this._IdRol = value;
					this.SendPropertyChanged("IdRol");
					this.OnIdRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Evaluacion", Storage="_Evaluacion", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Evaluacion> Evaluacion
		{
			get
			{
				return this._Evaluacion;
			}
			set
			{
				this._Evaluacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Usuarios", Storage="_Roles", ThisKey="IdRol", OtherKey="IdRol", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._IdRol = value.IdRol;
					}
					else
					{
						this._IdRol = default(Nullable<int>);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ambientes")]
	public partial class Ambientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAmbiente;
		
		private string _Ambiente;
		
		private EntitySet<Procesos> _Procesos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAmbienteChanging(int value);
    partial void OnIdAmbienteChanged();
    partial void OnAmbienteChanging(string value);
    partial void OnAmbienteChanged();
    #endregion
		
		public Ambientes()
		{
			this._Procesos = new EntitySet<Procesos>(new Action<Procesos>(this.attach_Procesos), new Action<Procesos>(this.detach_Procesos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAmbiente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAmbiente
		{
			get
			{
				return this._IdAmbiente;
			}
			set
			{
				if ((this._IdAmbiente != value))
				{
					this.OnIdAmbienteChanging(value);
					this.SendPropertyChanging();
					this._IdAmbiente = value;
					this.SendPropertyChanged("IdAmbiente");
					this.OnIdAmbienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ambiente", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Ambiente
		{
			get
			{
				return this._Ambiente;
			}
			set
			{
				if ((this._Ambiente != value))
				{
					this.OnAmbienteChanging(value);
					this.SendPropertyChanging();
					this._Ambiente = value;
					this.SendPropertyChanged("Ambiente");
					this.OnAmbienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ambientes_Procesos", Storage="_Procesos", ThisKey="IdAmbiente", OtherKey="IdAmbiente")]
		public EntitySet<Procesos> Procesos
		{
			get
			{
				return this._Procesos;
			}
			set
			{
				this._Procesos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Procesos(Procesos entity)
		{
			this.SendPropertyChanging();
			entity.Ambientes = this;
		}
		
		private void detach_Procesos(Procesos entity)
		{
			this.SendPropertyChanging();
			entity.Ambientes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorias")]
	public partial class Categorias
	{
		
		private int _IdCategoria;
		
		private string _Categoria;
		
		private string _Validacion;
		
		private decimal _Valor;
		
		public Categorias()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this._IdCategoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this._Categoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validacion", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Validacion
		{
			get
			{
				return this._Validacion;
			}
			set
			{
				if ((this._Validacion != value))
				{
					this._Validacion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Decimal(5,2) NOT NULL")]
		public decimal Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this._Valor = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConslAmbiente")]
	public partial class ConslAmbiente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdConslAmbiente;
		
		private int _IdConsolidado;
		
		private int _IdAmbiente;
		
		private System.Nullable<decimal> _Valor;
		
		private EntityRef<Consolidacion> _Consolidacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdConslAmbienteChanging(int value);
    partial void OnIdConslAmbienteChanged();
    partial void OnIdConsolidadoChanging(int value);
    partial void OnIdConsolidadoChanged();
    partial void OnIdAmbienteChanging(int value);
    partial void OnIdAmbienteChanged();
    partial void OnValorChanging(System.Nullable<decimal> value);
    partial void OnValorChanged();
    #endregion
		
		public ConslAmbiente()
		{
			this._Consolidacion = default(EntityRef<Consolidacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConslAmbiente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdConslAmbiente
		{
			get
			{
				return this._IdConslAmbiente;
			}
			set
			{
				if ((this._IdConslAmbiente != value))
				{
					this.OnIdConslAmbienteChanging(value);
					this.SendPropertyChanging();
					this._IdConslAmbiente = value;
					this.SendPropertyChanged("IdConslAmbiente");
					this.OnIdConslAmbienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConsolidado", DbType="Int NOT NULL")]
		public int IdConsolidado
		{
			get
			{
				return this._IdConsolidado;
			}
			set
			{
				if ((this._IdConsolidado != value))
				{
					if (this._Consolidacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdConsolidadoChanging(value);
					this.SendPropertyChanging();
					this._IdConsolidado = value;
					this.SendPropertyChanged("IdConsolidado");
					this.OnIdConsolidadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAmbiente", DbType="Int NOT NULL")]
		public int IdAmbiente
		{
			get
			{
				return this._IdAmbiente;
			}
			set
			{
				if ((this._IdAmbiente != value))
				{
					this.OnIdAmbienteChanging(value);
					this.SendPropertyChanging();
					this._IdAmbiente = value;
					this.SendPropertyChanged("IdAmbiente");
					this.OnIdAmbienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consolidacion_ConslAmbiente", Storage="_Consolidacion", ThisKey="IdConsolidado", OtherKey="IdConsolidacion", IsForeignKey=true)]
		public Consolidacion Consolidacion
		{
			get
			{
				return this._Consolidacion.Entity;
			}
			set
			{
				Consolidacion previousValue = this._Consolidacion.Entity;
				if (((previousValue != value) 
							|| (this._Consolidacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consolidacion.Entity = null;
						previousValue.ConslAmbiente.Remove(this);
					}
					this._Consolidacion.Entity = value;
					if ((value != null))
					{
						value.ConslAmbiente.Add(this);
						this._IdConsolidado = value.IdConsolidacion;
					}
					else
					{
						this._IdConsolidado = default(int);
					}
					this.SendPropertyChanged("Consolidacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConslComponente")]
	public partial class ConslComponente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdConslComponente;
		
		private int _IdConsolidado;
		
		private int _IdComponente;
		
		private decimal _Valor;
		
		private EntityRef<Consolidacion> _Consolidacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdConslComponenteChanging(int value);
    partial void OnIdConslComponenteChanged();
    partial void OnIdConsolidadoChanging(int value);
    partial void OnIdConsolidadoChanged();
    partial void OnIdComponenteChanging(int value);
    partial void OnIdComponenteChanged();
    partial void OnValorChanging(decimal value);
    partial void OnValorChanged();
    #endregion
		
		public ConslComponente()
		{
			this._Consolidacion = default(EntityRef<Consolidacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConslComponente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdConslComponente
		{
			get
			{
				return this._IdConslComponente;
			}
			set
			{
				if ((this._IdConslComponente != value))
				{
					this.OnIdConslComponenteChanging(value);
					this.SendPropertyChanging();
					this._IdConslComponente = value;
					this.SendPropertyChanged("IdConslComponente");
					this.OnIdConslComponenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConsolidado", DbType="Int NOT NULL")]
		public int IdConsolidado
		{
			get
			{
				return this._IdConsolidado;
			}
			set
			{
				if ((this._IdConsolidado != value))
				{
					if (this._Consolidacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdConsolidadoChanging(value);
					this.SendPropertyChanging();
					this._IdConsolidado = value;
					this.SendPropertyChanged("IdConsolidado");
					this.OnIdConsolidadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdComponente", DbType="Int NOT NULL")]
		public int IdComponente
		{
			get
			{
				return this._IdComponente;
			}
			set
			{
				if ((this._IdComponente != value))
				{
					this.OnIdComponenteChanging(value);
					this.SendPropertyChanging();
					this._IdComponente = value;
					this.SendPropertyChanged("IdComponente");
					this.OnIdComponenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Decimal(15,3) NOT NULL")]
		public decimal Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consolidacion_ConslComponente", Storage="_Consolidacion", ThisKey="IdConsolidado", OtherKey="IdConsolidacion", IsForeignKey=true)]
		public Consolidacion Consolidacion
		{
			get
			{
				return this._Consolidacion.Entity;
			}
			set
			{
				Consolidacion previousValue = this._Consolidacion.Entity;
				if (((previousValue != value) 
							|| (this._Consolidacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consolidacion.Entity = null;
						previousValue.ConslComponente.Remove(this);
					}
					this._Consolidacion.Entity = value;
					if ((value != null))
					{
						value.ConslComponente.Add(this);
						this._IdConsolidado = value.IdConsolidacion;
					}
					else
					{
						this._IdConsolidado = default(int);
					}
					this.SendPropertyChanged("Consolidacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConslPregunta")]
	public partial class ConslPregunta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdConslPregunta;
		
		private int _IdConsolidado;
		
		private int _IdPregunta;
		
		private bool _Valor;
		
		private bool _NoAplica;
		
		private EntityRef<Consolidacion> _Consolidacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdConslPreguntaChanging(int value);
    partial void OnIdConslPreguntaChanged();
    partial void OnIdConsolidadoChanging(int value);
    partial void OnIdConsolidadoChanged();
    partial void OnIdPreguntaChanging(int value);
    partial void OnIdPreguntaChanged();
    partial void OnValorChanging(bool value);
    partial void OnValorChanged();
    partial void OnNoAplicaChanging(bool value);
    partial void OnNoAplicaChanged();
    #endregion
		
		public ConslPregunta()
		{
			this._Consolidacion = default(EntityRef<Consolidacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConslPregunta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdConslPregunta
		{
			get
			{
				return this._IdConslPregunta;
			}
			set
			{
				if ((this._IdConslPregunta != value))
				{
					this.OnIdConslPreguntaChanging(value);
					this.SendPropertyChanging();
					this._IdConslPregunta = value;
					this.SendPropertyChanged("IdConslPregunta");
					this.OnIdConslPreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConsolidado", DbType="Int NOT NULL")]
		public int IdConsolidado
		{
			get
			{
				return this._IdConsolidado;
			}
			set
			{
				if ((this._IdConsolidado != value))
				{
					if (this._Consolidacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdConsolidadoChanging(value);
					this.SendPropertyChanging();
					this._IdConsolidado = value;
					this.SendPropertyChanged("IdConsolidado");
					this.OnIdConsolidadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPregunta", DbType="Int NOT NULL")]
		public int IdPregunta
		{
			get
			{
				return this._IdPregunta;
			}
			set
			{
				if ((this._IdPregunta != value))
				{
					this.OnIdPreguntaChanging(value);
					this.SendPropertyChanging();
					this._IdPregunta = value;
					this.SendPropertyChanged("IdPregunta");
					this.OnIdPreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Bit NOT NULL")]
		public bool Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoAplica", DbType="Bit NOT NULL")]
		public bool NoAplica
		{
			get
			{
				return this._NoAplica;
			}
			set
			{
				if ((this._NoAplica != value))
				{
					this.OnNoAplicaChanging(value);
					this.SendPropertyChanging();
					this._NoAplica = value;
					this.SendPropertyChanged("NoAplica");
					this.OnNoAplicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consolidacion_ConslPregunta", Storage="_Consolidacion", ThisKey="IdConsolidado", OtherKey="IdConsolidacion", IsForeignKey=true)]
		public Consolidacion Consolidacion
		{
			get
			{
				return this._Consolidacion.Entity;
			}
			set
			{
				Consolidacion previousValue = this._Consolidacion.Entity;
				if (((previousValue != value) 
							|| (this._Consolidacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consolidacion.Entity = null;
						previousValue.ConslPregunta.Remove(this);
					}
					this._Consolidacion.Entity = value;
					if ((value != null))
					{
						value.ConslPregunta.Add(this);
						this._IdConsolidado = value.IdConsolidacion;
					}
					else
					{
						this._IdConsolidado = default(int);
					}
					this.SendPropertyChanged("Consolidacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConslProceso")]
	public partial class ConslProceso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdConslProceso;
		
		private int _IdConsolidado;
		
		private int _IdProceso;
		
		private System.Nullable<decimal> _Valor;
		
		private EntityRef<Consolidacion> _Consolidacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdConslProcesoChanging(int value);
    partial void OnIdConslProcesoChanged();
    partial void OnIdConsolidadoChanging(int value);
    partial void OnIdConsolidadoChanged();
    partial void OnIdProcesoChanging(int value);
    partial void OnIdProcesoChanged();
    partial void OnValorChanging(System.Nullable<decimal> value);
    partial void OnValorChanged();
    #endregion
		
		public ConslProceso()
		{
			this._Consolidacion = default(EntityRef<Consolidacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConslProceso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdConslProceso
		{
			get
			{
				return this._IdConslProceso;
			}
			set
			{
				if ((this._IdConslProceso != value))
				{
					this.OnIdConslProcesoChanging(value);
					this.SendPropertyChanging();
					this._IdConslProceso = value;
					this.SendPropertyChanged("IdConslProceso");
					this.OnIdConslProcesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConsolidado", DbType="Int NOT NULL")]
		public int IdConsolidado
		{
			get
			{
				return this._IdConsolidado;
			}
			set
			{
				if ((this._IdConsolidado != value))
				{
					if (this._Consolidacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdConsolidadoChanging(value);
					this.SendPropertyChanging();
					this._IdConsolidado = value;
					this.SendPropertyChanged("IdConsolidado");
					this.OnIdConsolidadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProceso", DbType="Int NOT NULL")]
		public int IdProceso
		{
			get
			{
				return this._IdProceso;
			}
			set
			{
				if ((this._IdProceso != value))
				{
					this.OnIdProcesoChanging(value);
					this.SendPropertyChanging();
					this._IdProceso = value;
					this.SendPropertyChanged("IdProceso");
					this.OnIdProcesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consolidacion_ConslProceso", Storage="_Consolidacion", ThisKey="IdConsolidado", OtherKey="IdConsolidacion", IsForeignKey=true)]
		public Consolidacion Consolidacion
		{
			get
			{
				return this._Consolidacion.Entity;
			}
			set
			{
				Consolidacion previousValue = this._Consolidacion.Entity;
				if (((previousValue != value) 
							|| (this._Consolidacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consolidacion.Entity = null;
						previousValue.ConslProceso.Remove(this);
					}
					this._Consolidacion.Entity = value;
					if ((value != null))
					{
						value.ConslProceso.Add(this);
						this._IdConsolidado = value.IdConsolidacion;
					}
					else
					{
						this._IdConsolidado = default(int);
					}
					this.SendPropertyChanged("Consolidacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consolidacion")]
	public partial class Consolidacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdConsolidacion;
		
		private int _IdMedicion;
		
		private System.Nullable<int> _IdIE;
		
		private EntitySet<ConslAmbiente> _ConslAmbiente;
		
		private EntitySet<ConslComponente> _ConslComponente;
		
		private EntitySet<ConslPregunta> _ConslPregunta;
		
		private EntitySet<ConslProceso> _ConslProceso;
		
		private EntityRef<InstitucionEducativa> _InstitucionEducativa;
		
		private EntityRef<Mediciones> _Mediciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdConsolidacionChanging(int value);
    partial void OnIdConsolidacionChanged();
    partial void OnIdMedicionChanging(int value);
    partial void OnIdMedicionChanged();
    partial void OnIdIEChanging(System.Nullable<int> value);
    partial void OnIdIEChanged();
    #endregion
		
		public Consolidacion()
		{
			this._ConslAmbiente = new EntitySet<ConslAmbiente>(new Action<ConslAmbiente>(this.attach_ConslAmbiente), new Action<ConslAmbiente>(this.detach_ConslAmbiente));
			this._ConslComponente = new EntitySet<ConslComponente>(new Action<ConslComponente>(this.attach_ConslComponente), new Action<ConslComponente>(this.detach_ConslComponente));
			this._ConslPregunta = new EntitySet<ConslPregunta>(new Action<ConslPregunta>(this.attach_ConslPregunta), new Action<ConslPregunta>(this.detach_ConslPregunta));
			this._ConslProceso = new EntitySet<ConslProceso>(new Action<ConslProceso>(this.attach_ConslProceso), new Action<ConslProceso>(this.detach_ConslProceso));
			this._InstitucionEducativa = default(EntityRef<InstitucionEducativa>);
			this._Mediciones = default(EntityRef<Mediciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConsolidacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdConsolidacion
		{
			get
			{
				return this._IdConsolidacion;
			}
			set
			{
				if ((this._IdConsolidacion != value))
				{
					this.OnIdConsolidacionChanging(value);
					this.SendPropertyChanging();
					this._IdConsolidacion = value;
					this.SendPropertyChanged("IdConsolidacion");
					this.OnIdConsolidacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMedicion", DbType="Int NOT NULL")]
		public int IdMedicion
		{
			get
			{
				return this._IdMedicion;
			}
			set
			{
				if ((this._IdMedicion != value))
				{
					if (this._Mediciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMedicionChanging(value);
					this.SendPropertyChanging();
					this._IdMedicion = value;
					this.SendPropertyChanged("IdMedicion");
					this.OnIdMedicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIE", DbType="Int")]
		public System.Nullable<int> IdIE
		{
			get
			{
				return this._IdIE;
			}
			set
			{
				if ((this._IdIE != value))
				{
					if (this._InstitucionEducativa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdIEChanging(value);
					this.SendPropertyChanging();
					this._IdIE = value;
					this.SendPropertyChanged("IdIE");
					this.OnIdIEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consolidacion_ConslAmbiente", Storage="_ConslAmbiente", ThisKey="IdConsolidacion", OtherKey="IdConsolidado")]
		public EntitySet<ConslAmbiente> ConslAmbiente
		{
			get
			{
				return this._ConslAmbiente;
			}
			set
			{
				this._ConslAmbiente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consolidacion_ConslComponente", Storage="_ConslComponente", ThisKey="IdConsolidacion", OtherKey="IdConsolidado")]
		public EntitySet<ConslComponente> ConslComponente
		{
			get
			{
				return this._ConslComponente;
			}
			set
			{
				this._ConslComponente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consolidacion_ConslPregunta", Storage="_ConslPregunta", ThisKey="IdConsolidacion", OtherKey="IdConsolidado")]
		public EntitySet<ConslPregunta> ConslPregunta
		{
			get
			{
				return this._ConslPregunta;
			}
			set
			{
				this._ConslPregunta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consolidacion_ConslProceso", Storage="_ConslProceso", ThisKey="IdConsolidacion", OtherKey="IdConsolidado")]
		public EntitySet<ConslProceso> ConslProceso
		{
			get
			{
				return this._ConslProceso;
			}
			set
			{
				this._ConslProceso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitucionEducativa_Consolidacion", Storage="_InstitucionEducativa", ThisKey="IdIE", OtherKey="IdIE", IsForeignKey=true)]
		public InstitucionEducativa InstitucionEducativa
		{
			get
			{
				return this._InstitucionEducativa.Entity;
			}
			set
			{
				InstitucionEducativa previousValue = this._InstitucionEducativa.Entity;
				if (((previousValue != value) 
							|| (this._InstitucionEducativa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstitucionEducativa.Entity = null;
						previousValue.Consolidacion.Remove(this);
					}
					this._InstitucionEducativa.Entity = value;
					if ((value != null))
					{
						value.Consolidacion.Add(this);
						this._IdIE = value.IdIE;
					}
					else
					{
						this._IdIE = default(Nullable<int>);
					}
					this.SendPropertyChanged("InstitucionEducativa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mediciones_Consolidacion", Storage="_Mediciones", ThisKey="IdMedicion", OtherKey="IdMedicion", IsForeignKey=true)]
		public Mediciones Mediciones
		{
			get
			{
				return this._Mediciones.Entity;
			}
			set
			{
				Mediciones previousValue = this._Mediciones.Entity;
				if (((previousValue != value) 
							|| (this._Mediciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mediciones.Entity = null;
						previousValue.Consolidacion.Remove(this);
					}
					this._Mediciones.Entity = value;
					if ((value != null))
					{
						value.Consolidacion.Add(this);
						this._IdMedicion = value.IdMedicion;
					}
					else
					{
						this._IdMedicion = default(int);
					}
					this.SendPropertyChanged("Mediciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConslAmbiente(ConslAmbiente entity)
		{
			this.SendPropertyChanging();
			entity.Consolidacion = this;
		}
		
		private void detach_ConslAmbiente(ConslAmbiente entity)
		{
			this.SendPropertyChanging();
			entity.Consolidacion = null;
		}
		
		private void attach_ConslComponente(ConslComponente entity)
		{
			this.SendPropertyChanging();
			entity.Consolidacion = this;
		}
		
		private void detach_ConslComponente(ConslComponente entity)
		{
			this.SendPropertyChanging();
			entity.Consolidacion = null;
		}
		
		private void attach_ConslPregunta(ConslPregunta entity)
		{
			this.SendPropertyChanging();
			entity.Consolidacion = this;
		}
		
		private void detach_ConslPregunta(ConslPregunta entity)
		{
			this.SendPropertyChanging();
			entity.Consolidacion = null;
		}
		
		private void attach_ConslProceso(ConslProceso entity)
		{
			this.SendPropertyChanging();
			entity.Consolidacion = this;
		}
		
		private void detach_ConslProceso(ConslProceso entity)
		{
			this.SendPropertyChanging();
			entity.Consolidacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consultores")]
	public partial class Consultores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdConsultor;
		
		private string _Identificacion;
		
		private string _Nombre;
		
		private string _TelefonoFijo1;
		
		private string _TelefonoFijo2;
		
		private string _TelefonoMovil1;
		
		private string _TelefonoMovil2;
		
		private string _CorreoElectronico;
		
		private EntitySet<InstitucionEducativa> _InstitucionEducativa;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdConsultorChanging(int value);
    partial void OnIdConsultorChanged();
    partial void OnIdentificacionChanging(string value);
    partial void OnIdentificacionChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnTelefonoFijo1Changing(string value);
    partial void OnTelefonoFijo1Changed();
    partial void OnTelefonoFijo2Changing(string value);
    partial void OnTelefonoFijo2Changed();
    partial void OnTelefonoMovil1Changing(string value);
    partial void OnTelefonoMovil1Changed();
    partial void OnTelefonoMovil2Changing(string value);
    partial void OnTelefonoMovil2Changed();
    partial void OnCorreoElectronicoChanging(string value);
    partial void OnCorreoElectronicoChanged();
    #endregion
		
		public Consultores()
		{
			this._InstitucionEducativa = new EntitySet<InstitucionEducativa>(new Action<InstitucionEducativa>(this.attach_InstitucionEducativa), new Action<InstitucionEducativa>(this.detach_InstitucionEducativa));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConsultor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdConsultor
		{
			get
			{
				return this._IdConsultor;
			}
			set
			{
				if ((this._IdConsultor != value))
				{
					this.OnIdConsultorChanging(value);
					this.SendPropertyChanging();
					this._IdConsultor = value;
					this.SendPropertyChanged("IdConsultor");
					this.OnIdConsultorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identificacion", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Identificacion
		{
			get
			{
				return this._Identificacion;
			}
			set
			{
				if ((this._Identificacion != value))
				{
					this.OnIdentificacionChanging(value);
					this.SendPropertyChanging();
					this._Identificacion = value;
					this.SendPropertyChanged("Identificacion");
					this.OnIdentificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonoFijo1", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string TelefonoFijo1
		{
			get
			{
				return this._TelefonoFijo1;
			}
			set
			{
				if ((this._TelefonoFijo1 != value))
				{
					this.OnTelefonoFijo1Changing(value);
					this.SendPropertyChanging();
					this._TelefonoFijo1 = value;
					this.SendPropertyChanged("TelefonoFijo1");
					this.OnTelefonoFijo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonoFijo2", DbType="VarChar(15)")]
		public string TelefonoFijo2
		{
			get
			{
				return this._TelefonoFijo2;
			}
			set
			{
				if ((this._TelefonoFijo2 != value))
				{
					this.OnTelefonoFijo2Changing(value);
					this.SendPropertyChanging();
					this._TelefonoFijo2 = value;
					this.SendPropertyChanged("TelefonoFijo2");
					this.OnTelefonoFijo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonoMovil1", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string TelefonoMovil1
		{
			get
			{
				return this._TelefonoMovil1;
			}
			set
			{
				if ((this._TelefonoMovil1 != value))
				{
					this.OnTelefonoMovil1Changing(value);
					this.SendPropertyChanging();
					this._TelefonoMovil1 = value;
					this.SendPropertyChanged("TelefonoMovil1");
					this.OnTelefonoMovil1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonoMovil2", DbType="VarChar(15)")]
		public string TelefonoMovil2
		{
			get
			{
				return this._TelefonoMovil2;
			}
			set
			{
				if ((this._TelefonoMovil2 != value))
				{
					this.OnTelefonoMovil2Changing(value);
					this.SendPropertyChanging();
					this._TelefonoMovil2 = value;
					this.SendPropertyChanged("TelefonoMovil2");
					this.OnTelefonoMovil2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorreoElectronico", DbType="VarChar(150)")]
		public string CorreoElectronico
		{
			get
			{
				return this._CorreoElectronico;
			}
			set
			{
				if ((this._CorreoElectronico != value))
				{
					this.OnCorreoElectronicoChanging(value);
					this.SendPropertyChanging();
					this._CorreoElectronico = value;
					this.SendPropertyChanged("CorreoElectronico");
					this.OnCorreoElectronicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultores_InstitucionEducativa", Storage="_InstitucionEducativa", ThisKey="IdConsultor", OtherKey="IdConsultor")]
		public EntitySet<InstitucionEducativa> InstitucionEducativa
		{
			get
			{
				return this._InstitucionEducativa;
			}
			set
			{
				this._InstitucionEducativa.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstitucionEducativa(InstitucionEducativa entity)
		{
			this.SendPropertyChanging();
			entity.Consultores = this;
		}
		
		private void detach_InstitucionEducativa(InstitucionEducativa entity)
		{
			this.SendPropertyChanging();
			entity.Consultores = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstadoEvaluacion")]
	public partial class EstadoEvaluacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEstado;
		
		private string _Estado;
		
		private EntitySet<Evaluacion> _Evaluacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEstadoChanging(int value);
    partial void OnIdEstadoChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public EstadoEvaluacion()
		{
			this._Evaluacion = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacion), new Action<Evaluacion>(this.detach_Evaluacion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEstado
		{
			get
			{
				return this._IdEstado;
			}
			set
			{
				if ((this._IdEstado != value))
				{
					this.OnIdEstadoChanging(value);
					this.SendPropertyChanging();
					this._IdEstado = value;
					this.SendPropertyChanged("IdEstado");
					this.OnIdEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadoEvaluacion_Evaluacion", Storage="_Evaluacion", ThisKey="IdEstado", OtherKey="IdEstado")]
		public EntitySet<Evaluacion> Evaluacion
		{
			get
			{
				return this._Evaluacion;
			}
			set
			{
				this._Evaluacion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.EstadoEvaluacion = this;
		}
		
		private void detach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.EstadoEvaluacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evaluacion")]
	public partial class Evaluacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEvaluacion;
		
		private int _IdIE;
		
		private int _IdActor;
		
		private System.DateTime _Fecha;
		
		private int _IdUsuario;
		
		private System.Nullable<int> _IdEstado;
		
		private System.Nullable<int> _IdMedicion;
		
		private EntitySet<ResultadosByEvaluacion> _ResultadosByEvaluacion;
		
		private EntityRef<Actores> _Actores;
		
		private EntityRef<EstadoEvaluacion> _EstadoEvaluacion;
		
		private EntityRef<Usuarios> _Usuarios;
		
		private EntityRef<InstitucionEducativa> _InstitucionEducativa;
		
		private EntityRef<Mediciones> _Mediciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEvaluacionChanging(int value);
    partial void OnIdEvaluacionChanged();
    partial void OnIdIEChanging(int value);
    partial void OnIdIEChanged();
    partial void OnIdActorChanging(int value);
    partial void OnIdActorChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnIdEstadoChanging(System.Nullable<int> value);
    partial void OnIdEstadoChanged();
    partial void OnIdMedicionChanging(System.Nullable<int> value);
    partial void OnIdMedicionChanged();
    #endregion
		
		public Evaluacion()
		{
			this._ResultadosByEvaluacion = new EntitySet<ResultadosByEvaluacion>(new Action<ResultadosByEvaluacion>(this.attach_ResultadosByEvaluacion), new Action<ResultadosByEvaluacion>(this.detach_ResultadosByEvaluacion));
			this._Actores = default(EntityRef<Actores>);
			this._EstadoEvaluacion = default(EntityRef<EstadoEvaluacion>);
			this._Usuarios = default(EntityRef<Usuarios>);
			this._InstitucionEducativa = default(EntityRef<InstitucionEducativa>);
			this._Mediciones = default(EntityRef<Mediciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvaluacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEvaluacion
		{
			get
			{
				return this._IdEvaluacion;
			}
			set
			{
				if ((this._IdEvaluacion != value))
				{
					this.OnIdEvaluacionChanging(value);
					this.SendPropertyChanging();
					this._IdEvaluacion = value;
					this.SendPropertyChanged("IdEvaluacion");
					this.OnIdEvaluacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIE", DbType="Int NOT NULL")]
		public int IdIE
		{
			get
			{
				return this._IdIE;
			}
			set
			{
				if ((this._IdIE != value))
				{
					if (this._InstitucionEducativa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdIEChanging(value);
					this.SendPropertyChanging();
					this._IdIE = value;
					this.SendPropertyChanged("IdIE");
					this.OnIdIEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdActor", DbType="Int NOT NULL")]
		public int IdActor
		{
			get
			{
				return this._IdActor;
			}
			set
			{
				if ((this._IdActor != value))
				{
					if (this._Actores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdActorChanging(value);
					this.SendPropertyChanging();
					this._IdActor = value;
					this.SendPropertyChanged("IdActor");
					this.OnIdActorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstado", DbType="Int")]
		public System.Nullable<int> IdEstado
		{
			get
			{
				return this._IdEstado;
			}
			set
			{
				if ((this._IdEstado != value))
				{
					if (this._EstadoEvaluacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEstadoChanging(value);
					this.SendPropertyChanging();
					this._IdEstado = value;
					this.SendPropertyChanged("IdEstado");
					this.OnIdEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMedicion", DbType="Int")]
		public System.Nullable<int> IdMedicion
		{
			get
			{
				return this._IdMedicion;
			}
			set
			{
				if ((this._IdMedicion != value))
				{
					if (this._Mediciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMedicionChanging(value);
					this.SendPropertyChanging();
					this._IdMedicion = value;
					this.SendPropertyChanged("IdMedicion");
					this.OnIdMedicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluacion_ResultadosByEvaluacion", Storage="_ResultadosByEvaluacion", ThisKey="IdEvaluacion", OtherKey="IdEvaluacion")]
		public EntitySet<ResultadosByEvaluacion> ResultadosByEvaluacion
		{
			get
			{
				return this._ResultadosByEvaluacion;
			}
			set
			{
				this._ResultadosByEvaluacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actores_Evaluacion", Storage="_Actores", ThisKey="IdActor", OtherKey="IdActor", IsForeignKey=true)]
		public Actores Actores
		{
			get
			{
				return this._Actores.Entity;
			}
			set
			{
				Actores previousValue = this._Actores.Entity;
				if (((previousValue != value) 
							|| (this._Actores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actores.Entity = null;
						previousValue.Evaluacion.Remove(this);
					}
					this._Actores.Entity = value;
					if ((value != null))
					{
						value.Evaluacion.Add(this);
						this._IdActor = value.IdActor;
					}
					else
					{
						this._IdActor = default(int);
					}
					this.SendPropertyChanged("Actores");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadoEvaluacion_Evaluacion", Storage="_EstadoEvaluacion", ThisKey="IdEstado", OtherKey="IdEstado", IsForeignKey=true)]
		public EstadoEvaluacion EstadoEvaluacion
		{
			get
			{
				return this._EstadoEvaluacion.Entity;
			}
			set
			{
				EstadoEvaluacion previousValue = this._EstadoEvaluacion.Entity;
				if (((previousValue != value) 
							|| (this._EstadoEvaluacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadoEvaluacion.Entity = null;
						previousValue.Evaluacion.Remove(this);
					}
					this._EstadoEvaluacion.Entity = value;
					if ((value != null))
					{
						value.Evaluacion.Add(this);
						this._IdEstado = value.IdEstado;
					}
					else
					{
						this._IdEstado = default(Nullable<int>);
					}
					this.SendPropertyChanged("EstadoEvaluacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Evaluacion", Storage="_Usuarios", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Evaluacion.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Evaluacion.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitucionEducativa_Evaluacion", Storage="_InstitucionEducativa", ThisKey="IdIE", OtherKey="IdIE", IsForeignKey=true)]
		public InstitucionEducativa InstitucionEducativa
		{
			get
			{
				return this._InstitucionEducativa.Entity;
			}
			set
			{
				InstitucionEducativa previousValue = this._InstitucionEducativa.Entity;
				if (((previousValue != value) 
							|| (this._InstitucionEducativa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstitucionEducativa.Entity = null;
						previousValue.Evaluacion.Remove(this);
					}
					this._InstitucionEducativa.Entity = value;
					if ((value != null))
					{
						value.Evaluacion.Add(this);
						this._IdIE = value.IdIE;
					}
					else
					{
						this._IdIE = default(int);
					}
					this.SendPropertyChanged("InstitucionEducativa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mediciones_Evaluacion", Storage="_Mediciones", ThisKey="IdMedicion", OtherKey="IdMedicion", IsForeignKey=true)]
		public Mediciones Mediciones
		{
			get
			{
				return this._Mediciones.Entity;
			}
			set
			{
				Mediciones previousValue = this._Mediciones.Entity;
				if (((previousValue != value) 
							|| (this._Mediciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mediciones.Entity = null;
						previousValue.Evaluacion.Remove(this);
					}
					this._Mediciones.Entity = value;
					if ((value != null))
					{
						value.Evaluacion.Add(this);
						this._IdMedicion = value.IdMedicion;
					}
					else
					{
						this._IdMedicion = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mediciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResultadosByEvaluacion(ResultadosByEvaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Evaluacion = this;
		}
		
		private void detach_ResultadosByEvaluacion(ResultadosByEvaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Evaluacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitucionEducativa")]
	public partial class InstitucionEducativa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdIE;
		
		private System.Nullable<int> _IdConsultor;
		
		private string _CodigoDane;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private string _Municipio;
		
		private string _Rector;
		
		private string _Email;
		
		private bool _Estado;
		
		private EntitySet<Consolidacion> _Consolidacion;
		
		private EntitySet<Evaluacion> _Evaluacion;
		
		private EntityRef<Consultores> _Consultores;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdIEChanging(int value);
    partial void OnIdIEChanged();
    partial void OnIdConsultorChanging(System.Nullable<int> value);
    partial void OnIdConsultorChanged();
    partial void OnCodigoDaneChanging(string value);
    partial void OnCodigoDaneChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnMunicipioChanging(string value);
    partial void OnMunicipioChanged();
    partial void OnRectorChanging(string value);
    partial void OnRectorChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEstadoChanging(bool value);
    partial void OnEstadoChanged();
    #endregion
		
		public InstitucionEducativa()
		{
			this._Consolidacion = new EntitySet<Consolidacion>(new Action<Consolidacion>(this.attach_Consolidacion), new Action<Consolidacion>(this.detach_Consolidacion));
			this._Evaluacion = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacion), new Action<Evaluacion>(this.detach_Evaluacion));
			this._Consultores = default(EntityRef<Consultores>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdIE
		{
			get
			{
				return this._IdIE;
			}
			set
			{
				if ((this._IdIE != value))
				{
					this.OnIdIEChanging(value);
					this.SendPropertyChanging();
					this._IdIE = value;
					this.SendPropertyChanged("IdIE");
					this.OnIdIEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConsultor", DbType="Int")]
		public System.Nullable<int> IdConsultor
		{
			get
			{
				return this._IdConsultor;
			}
			set
			{
				if ((this._IdConsultor != value))
				{
					if (this._Consultores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdConsultorChanging(value);
					this.SendPropertyChanging();
					this._IdConsultor = value;
					this.SendPropertyChanged("IdConsultor");
					this.OnIdConsultorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoDane", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CodigoDane
		{
			get
			{
				return this._CodigoDane;
			}
			set
			{
				if ((this._CodigoDane != value))
				{
					this.OnCodigoDaneChanging(value);
					this.SendPropertyChanging();
					this._CodigoDane = value;
					this.SendPropertyChanged("CodigoDane");
					this.OnCodigoDaneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Municipio", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Municipio
		{
			get
			{
				return this._Municipio;
			}
			set
			{
				if ((this._Municipio != value))
				{
					this.OnMunicipioChanging(value);
					this.SendPropertyChanging();
					this._Municipio = value;
					this.SendPropertyChanged("Municipio");
					this.OnMunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rector", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Rector
		{
			get
			{
				return this._Rector;
			}
			set
			{
				if ((this._Rector != value))
				{
					this.OnRectorChanging(value);
					this.SendPropertyChanging();
					this._Rector = value;
					this.SendPropertyChanged("Rector");
					this.OnRectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit NOT NULL")]
		public bool Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitucionEducativa_Consolidacion", Storage="_Consolidacion", ThisKey="IdIE", OtherKey="IdIE")]
		public EntitySet<Consolidacion> Consolidacion
		{
			get
			{
				return this._Consolidacion;
			}
			set
			{
				this._Consolidacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitucionEducativa_Evaluacion", Storage="_Evaluacion", ThisKey="IdIE", OtherKey="IdIE")]
		public EntitySet<Evaluacion> Evaluacion
		{
			get
			{
				return this._Evaluacion;
			}
			set
			{
				this._Evaluacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultores_InstitucionEducativa", Storage="_Consultores", ThisKey="IdConsultor", OtherKey="IdConsultor", IsForeignKey=true)]
		public Consultores Consultores
		{
			get
			{
				return this._Consultores.Entity;
			}
			set
			{
				Consultores previousValue = this._Consultores.Entity;
				if (((previousValue != value) 
							|| (this._Consultores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consultores.Entity = null;
						previousValue.InstitucionEducativa.Remove(this);
					}
					this._Consultores.Entity = value;
					if ((value != null))
					{
						value.InstitucionEducativa.Add(this);
						this._IdConsultor = value.IdConsultor;
					}
					else
					{
						this._IdConsultor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Consultores");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consolidacion(Consolidacion entity)
		{
			this.SendPropertyChanging();
			entity.InstitucionEducativa = this;
		}
		
		private void detach_Consolidacion(Consolidacion entity)
		{
			this.SendPropertyChanging();
			entity.InstitucionEducativa = null;
		}
		
		private void attach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.InstitucionEducativa = this;
		}
		
		private void detach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.InstitucionEducativa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mediciones")]
	public partial class Mediciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMedicion;
		
		private System.DateTime _FechaMedicion;
		
		private EntitySet<Consolidacion> _Consolidacion;
		
		private EntitySet<Evaluacion> _Evaluacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMedicionChanging(int value);
    partial void OnIdMedicionChanged();
    partial void OnFechaMedicionChanging(System.DateTime value);
    partial void OnFechaMedicionChanged();
    #endregion
		
		public Mediciones()
		{
			this._Consolidacion = new EntitySet<Consolidacion>(new Action<Consolidacion>(this.attach_Consolidacion), new Action<Consolidacion>(this.detach_Consolidacion));
			this._Evaluacion = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacion), new Action<Evaluacion>(this.detach_Evaluacion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMedicion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdMedicion
		{
			get
			{
				return this._IdMedicion;
			}
			set
			{
				if ((this._IdMedicion != value))
				{
					this.OnIdMedicionChanging(value);
					this.SendPropertyChanging();
					this._IdMedicion = value;
					this.SendPropertyChanged("IdMedicion");
					this.OnIdMedicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaMedicion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaMedicion
		{
			get
			{
				return this._FechaMedicion;
			}
			set
			{
				if ((this._FechaMedicion != value))
				{
					this.OnFechaMedicionChanging(value);
					this.SendPropertyChanging();
					this._FechaMedicion = value;
					this.SendPropertyChanged("FechaMedicion");
					this.OnFechaMedicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mediciones_Consolidacion", Storage="_Consolidacion", ThisKey="IdMedicion", OtherKey="IdMedicion")]
		public EntitySet<Consolidacion> Consolidacion
		{
			get
			{
				return this._Consolidacion;
			}
			set
			{
				this._Consolidacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mediciones_Evaluacion", Storage="_Evaluacion", ThisKey="IdMedicion", OtherKey="IdMedicion")]
		public EntitySet<Evaluacion> Evaluacion
		{
			get
			{
				return this._Evaluacion;
			}
			set
			{
				this._Evaluacion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consolidacion(Consolidacion entity)
		{
			this.SendPropertyChanging();
			entity.Mediciones = this;
		}
		
		private void detach_Consolidacion(Consolidacion entity)
		{
			this.SendPropertyChanging();
			entity.Mediciones = null;
		}
		
		private void attach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Mediciones = this;
		}
		
		private void detach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Mediciones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Preguntas")]
	public partial class Preguntas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPregunta;
		
		private int _IdComponente;
		
		private string _Pregunta;
		
		private System.Nullable<bool> _Padres;
		
		private System.Nullable<bool> _Docente;
		
		private System.Nullable<bool> _Profesional;
		
		private System.Nullable<bool> _Estudiante;
		
		private System.Nullable<bool> _Directivo;
		
		private System.Nullable<bool> _Secretaria;
		
		private System.Nullable<int> _IdPrivilegiado;
		
		private EntitySet<Resultados> _Resultados;
		
		private EntitySet<AyudaByPregunta> _AyudaByPregunta;
		
		private EntityRef<Privilegiados> _Privilegiados;
		
		private EntityRef<Componentes> _Componentes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPreguntaChanging(int value);
    partial void OnIdPreguntaChanged();
    partial void OnIdComponenteChanging(int value);
    partial void OnIdComponenteChanged();
    partial void OnPreguntaChanging(string value);
    partial void OnPreguntaChanged();
    partial void OnPadresChanging(System.Nullable<bool> value);
    partial void OnPadresChanged();
    partial void OnDocenteChanging(System.Nullable<bool> value);
    partial void OnDocenteChanged();
    partial void OnProfesionalChanging(System.Nullable<bool> value);
    partial void OnProfesionalChanged();
    partial void OnEstudianteChanging(System.Nullable<bool> value);
    partial void OnEstudianteChanged();
    partial void OnDirectivoChanging(System.Nullable<bool> value);
    partial void OnDirectivoChanged();
    partial void OnSecretariaChanging(System.Nullable<bool> value);
    partial void OnSecretariaChanged();
    partial void OnIdPrivilegiadoChanging(System.Nullable<int> value);
    partial void OnIdPrivilegiadoChanged();
    #endregion
		
		public Preguntas()
		{
			this._Resultados = new EntitySet<Resultados>(new Action<Resultados>(this.attach_Resultados), new Action<Resultados>(this.detach_Resultados));
			this._AyudaByPregunta = new EntitySet<AyudaByPregunta>(new Action<AyudaByPregunta>(this.attach_AyudaByPregunta), new Action<AyudaByPregunta>(this.detach_AyudaByPregunta));
			this._Privilegiados = default(EntityRef<Privilegiados>);
			this._Componentes = default(EntityRef<Componentes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPregunta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPregunta
		{
			get
			{
				return this._IdPregunta;
			}
			set
			{
				if ((this._IdPregunta != value))
				{
					this.OnIdPreguntaChanging(value);
					this.SendPropertyChanging();
					this._IdPregunta = value;
					this.SendPropertyChanged("IdPregunta");
					this.OnIdPreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdComponente", DbType="Int NOT NULL")]
		public int IdComponente
		{
			get
			{
				return this._IdComponente;
			}
			set
			{
				if ((this._IdComponente != value))
				{
					if (this._Componentes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdComponenteChanging(value);
					this.SendPropertyChanging();
					this._IdComponente = value;
					this.SendPropertyChanged("IdComponente");
					this.OnIdComponenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pregunta", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Pregunta
		{
			get
			{
				return this._Pregunta;
			}
			set
			{
				if ((this._Pregunta != value))
				{
					this.OnPreguntaChanging(value);
					this.SendPropertyChanging();
					this._Pregunta = value;
					this.SendPropertyChanged("Pregunta");
					this.OnPreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Padres", DbType="Bit")]
		public System.Nullable<bool> Padres
		{
			get
			{
				return this._Padres;
			}
			set
			{
				if ((this._Padres != value))
				{
					this.OnPadresChanging(value);
					this.SendPropertyChanging();
					this._Padres = value;
					this.SendPropertyChanged("Padres");
					this.OnPadresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Docente", DbType="Bit")]
		public System.Nullable<bool> Docente
		{
			get
			{
				return this._Docente;
			}
			set
			{
				if ((this._Docente != value))
				{
					this.OnDocenteChanging(value);
					this.SendPropertyChanging();
					this._Docente = value;
					this.SendPropertyChanged("Docente");
					this.OnDocenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profesional", DbType="Bit")]
		public System.Nullable<bool> Profesional
		{
			get
			{
				return this._Profesional;
			}
			set
			{
				if ((this._Profesional != value))
				{
					this.OnProfesionalChanging(value);
					this.SendPropertyChanging();
					this._Profesional = value;
					this.SendPropertyChanged("Profesional");
					this.OnProfesionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estudiante", DbType="Bit")]
		public System.Nullable<bool> Estudiante
		{
			get
			{
				return this._Estudiante;
			}
			set
			{
				if ((this._Estudiante != value))
				{
					this.OnEstudianteChanging(value);
					this.SendPropertyChanging();
					this._Estudiante = value;
					this.SendPropertyChanged("Estudiante");
					this.OnEstudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Directivo", DbType="Bit")]
		public System.Nullable<bool> Directivo
		{
			get
			{
				return this._Directivo;
			}
			set
			{
				if ((this._Directivo != value))
				{
					this.OnDirectivoChanging(value);
					this.SendPropertyChanging();
					this._Directivo = value;
					this.SendPropertyChanged("Directivo");
					this.OnDirectivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Secretaria de Educacion]", Storage="_Secretaria", DbType="Bit")]
		public System.Nullable<bool> Secretaria
		{
			get
			{
				return this._Secretaria;
			}
			set
			{
				if ((this._Secretaria != value))
				{
					this.OnSecretariaChanging(value);
					this.SendPropertyChanging();
					this._Secretaria = value;
					this.SendPropertyChanged("Secretaria");
					this.OnSecretariaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPrivilegiado", DbType="Int")]
		public System.Nullable<int> IdPrivilegiado
		{
			get
			{
				return this._IdPrivilegiado;
			}
			set
			{
				if ((this._IdPrivilegiado != value))
				{
					if (this._Privilegiados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPrivilegiadoChanging(value);
					this.SendPropertyChanging();
					this._IdPrivilegiado = value;
					this.SendPropertyChanged("IdPrivilegiado");
					this.OnIdPrivilegiadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preguntas_Resultados", Storage="_Resultados", ThisKey="IdPregunta", OtherKey="IdPregunta")]
		public EntitySet<Resultados> Resultados
		{
			get
			{
				return this._Resultados;
			}
			set
			{
				this._Resultados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preguntas_AyudaByPregunta", Storage="_AyudaByPregunta", ThisKey="IdPregunta", OtherKey="IdPregunta")]
		public EntitySet<AyudaByPregunta> AyudaByPregunta
		{
			get
			{
				return this._AyudaByPregunta;
			}
			set
			{
				this._AyudaByPregunta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Privilegiados_Preguntas", Storage="_Privilegiados", ThisKey="IdPrivilegiado", OtherKey="IdPrivilegiado", IsForeignKey=true)]
		public Privilegiados Privilegiados
		{
			get
			{
				return this._Privilegiados.Entity;
			}
			set
			{
				Privilegiados previousValue = this._Privilegiados.Entity;
				if (((previousValue != value) 
							|| (this._Privilegiados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Privilegiados.Entity = null;
						previousValue.Preguntas.Remove(this);
					}
					this._Privilegiados.Entity = value;
					if ((value != null))
					{
						value.Preguntas.Add(this);
						this._IdPrivilegiado = value.IdPrivilegiado;
					}
					else
					{
						this._IdPrivilegiado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Privilegiados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Componentes_Preguntas", Storage="_Componentes", ThisKey="IdComponente", OtherKey="IdComponente", IsForeignKey=true)]
		public Componentes Componentes
		{
			get
			{
				return this._Componentes.Entity;
			}
			set
			{
				Componentes previousValue = this._Componentes.Entity;
				if (((previousValue != value) 
							|| (this._Componentes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Componentes.Entity = null;
						previousValue.Preguntas.Remove(this);
					}
					this._Componentes.Entity = value;
					if ((value != null))
					{
						value.Preguntas.Add(this);
						this._IdComponente = value.IdComponente;
					}
					else
					{
						this._IdComponente = default(int);
					}
					this.SendPropertyChanged("Componentes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resultados(Resultados entity)
		{
			this.SendPropertyChanging();
			entity.Preguntas = this;
		}
		
		private void detach_Resultados(Resultados entity)
		{
			this.SendPropertyChanging();
			entity.Preguntas = null;
		}
		
		private void attach_AyudaByPregunta(AyudaByPregunta entity)
		{
			this.SendPropertyChanging();
			entity.Preguntas = this;
		}
		
		private void detach_AyudaByPregunta(AyudaByPregunta entity)
		{
			this.SendPropertyChanging();
			entity.Preguntas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Privilegiados")]
	public partial class Privilegiados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPrivilegiado;
		
		private string _Privilegiado;
		
		private EntitySet<Preguntas> _Preguntas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPrivilegiadoChanging(int value);
    partial void OnIdPrivilegiadoChanged();
    partial void OnPrivilegiadoChanging(string value);
    partial void OnPrivilegiadoChanged();
    #endregion
		
		public Privilegiados()
		{
			this._Preguntas = new EntitySet<Preguntas>(new Action<Preguntas>(this.attach_Preguntas), new Action<Preguntas>(this.detach_Preguntas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPrivilegiado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPrivilegiado
		{
			get
			{
				return this._IdPrivilegiado;
			}
			set
			{
				if ((this._IdPrivilegiado != value))
				{
					this.OnIdPrivilegiadoChanging(value);
					this.SendPropertyChanging();
					this._IdPrivilegiado = value;
					this.SendPropertyChanged("IdPrivilegiado");
					this.OnIdPrivilegiadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Privilegiado", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Privilegiado
		{
			get
			{
				return this._Privilegiado;
			}
			set
			{
				if ((this._Privilegiado != value))
				{
					this.OnPrivilegiadoChanging(value);
					this.SendPropertyChanging();
					this._Privilegiado = value;
					this.SendPropertyChanged("Privilegiado");
					this.OnPrivilegiadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Privilegiados_Preguntas", Storage="_Preguntas", ThisKey="IdPrivilegiado", OtherKey="IdPrivilegiado")]
		public EntitySet<Preguntas> Preguntas
		{
			get
			{
				return this._Preguntas;
			}
			set
			{
				this._Preguntas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Preguntas(Preguntas entity)
		{
			this.SendPropertyChanging();
			entity.Privilegiados = this;
		}
		
		private void detach_Preguntas(Preguntas entity)
		{
			this.SendPropertyChanging();
			entity.Privilegiados = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Procesos")]
	public partial class Procesos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProceso;
		
		private System.Nullable<int> _IdAmbiente;
		
		private string _Proceso;
		
		private EntitySet<Componentes> _Componentes;
		
		private EntityRef<Ambientes> _Ambientes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProcesoChanging(int value);
    partial void OnIdProcesoChanged();
    partial void OnIdAmbienteChanging(System.Nullable<int> value);
    partial void OnIdAmbienteChanged();
    partial void OnProcesoChanging(string value);
    partial void OnProcesoChanged();
    #endregion
		
		public Procesos()
		{
			this._Componentes = new EntitySet<Componentes>(new Action<Componentes>(this.attach_Componentes), new Action<Componentes>(this.detach_Componentes));
			this._Ambientes = default(EntityRef<Ambientes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProceso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProceso
		{
			get
			{
				return this._IdProceso;
			}
			set
			{
				if ((this._IdProceso != value))
				{
					this.OnIdProcesoChanging(value);
					this.SendPropertyChanging();
					this._IdProceso = value;
					this.SendPropertyChanged("IdProceso");
					this.OnIdProcesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAmbiente", DbType="Int")]
		public System.Nullable<int> IdAmbiente
		{
			get
			{
				return this._IdAmbiente;
			}
			set
			{
				if ((this._IdAmbiente != value))
				{
					if (this._Ambientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAmbienteChanging(value);
					this.SendPropertyChanging();
					this._IdAmbiente = value;
					this.SendPropertyChanged("IdAmbiente");
					this.OnIdAmbienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Proceso", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Proceso
		{
			get
			{
				return this._Proceso;
			}
			set
			{
				if ((this._Proceso != value))
				{
					this.OnProcesoChanging(value);
					this.SendPropertyChanging();
					this._Proceso = value;
					this.SendPropertyChanged("Proceso");
					this.OnProcesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Procesos_Componentes", Storage="_Componentes", ThisKey="IdProceso", OtherKey="IdProceso")]
		public EntitySet<Componentes> Componentes
		{
			get
			{
				return this._Componentes;
			}
			set
			{
				this._Componentes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ambientes_Procesos", Storage="_Ambientes", ThisKey="IdAmbiente", OtherKey="IdAmbiente", IsForeignKey=true)]
		public Ambientes Ambientes
		{
			get
			{
				return this._Ambientes.Entity;
			}
			set
			{
				Ambientes previousValue = this._Ambientes.Entity;
				if (((previousValue != value) 
							|| (this._Ambientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ambientes.Entity = null;
						previousValue.Procesos.Remove(this);
					}
					this._Ambientes.Entity = value;
					if ((value != null))
					{
						value.Procesos.Add(this);
						this._IdAmbiente = value.IdAmbiente;
					}
					else
					{
						this._IdAmbiente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ambientes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Componentes(Componentes entity)
		{
			this.SendPropertyChanging();
			entity.Procesos = this;
		}
		
		private void detach_Componentes(Componentes entity)
		{
			this.SendPropertyChanging();
			entity.Procesos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resultados")]
	public partial class Resultados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdResultados;
		
		private int _IdPregunta;
		
		private System.Nullable<bool> _Valor;
		
		private System.Nullable<bool> _NoAplica;
		
		private EntitySet<ResultadosByEvaluacion> _ResultadosByEvaluacion;
		
		private EntityRef<Preguntas> _Preguntas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdResultadosChanging(int value);
    partial void OnIdResultadosChanged();
    partial void OnIdPreguntaChanging(int value);
    partial void OnIdPreguntaChanged();
    partial void OnValorChanging(System.Nullable<bool> value);
    partial void OnValorChanged();
    partial void OnNoAplicaChanging(System.Nullable<bool> value);
    partial void OnNoAplicaChanged();
    #endregion
		
		public Resultados()
		{
			this._ResultadosByEvaluacion = new EntitySet<ResultadosByEvaluacion>(new Action<ResultadosByEvaluacion>(this.attach_ResultadosByEvaluacion), new Action<ResultadosByEvaluacion>(this.detach_ResultadosByEvaluacion));
			this._Preguntas = default(EntityRef<Preguntas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdResultados", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdResultados
		{
			get
			{
				return this._IdResultados;
			}
			set
			{
				if ((this._IdResultados != value))
				{
					this.OnIdResultadosChanging(value);
					this.SendPropertyChanging();
					this._IdResultados = value;
					this.SendPropertyChanged("IdResultados");
					this.OnIdResultadosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPregunta", DbType="Int NOT NULL")]
		public int IdPregunta
		{
			get
			{
				return this._IdPregunta;
			}
			set
			{
				if ((this._IdPregunta != value))
				{
					if (this._Preguntas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPreguntaChanging(value);
					this.SendPropertyChanging();
					this._IdPregunta = value;
					this.SendPropertyChanged("IdPregunta");
					this.OnIdPreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Bit")]
		public System.Nullable<bool> Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoAplica", DbType="Bit")]
		public System.Nullable<bool> NoAplica
		{
			get
			{
				return this._NoAplica;
			}
			set
			{
				if ((this._NoAplica != value))
				{
					this.OnNoAplicaChanging(value);
					this.SendPropertyChanging();
					this._NoAplica = value;
					this.SendPropertyChanged("NoAplica");
					this.OnNoAplicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resultados_ResultadosByEvaluacion", Storage="_ResultadosByEvaluacion", ThisKey="IdResultados", OtherKey="IdResultado")]
		public EntitySet<ResultadosByEvaluacion> ResultadosByEvaluacion
		{
			get
			{
				return this._ResultadosByEvaluacion;
			}
			set
			{
				this._ResultadosByEvaluacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preguntas_Resultados", Storage="_Preguntas", ThisKey="IdPregunta", OtherKey="IdPregunta", IsForeignKey=true)]
		public Preguntas Preguntas
		{
			get
			{
				return this._Preguntas.Entity;
			}
			set
			{
				Preguntas previousValue = this._Preguntas.Entity;
				if (((previousValue != value) 
							|| (this._Preguntas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Preguntas.Entity = null;
						previousValue.Resultados.Remove(this);
					}
					this._Preguntas.Entity = value;
					if ((value != null))
					{
						value.Resultados.Add(this);
						this._IdPregunta = value.IdPregunta;
					}
					else
					{
						this._IdPregunta = default(int);
					}
					this.SendPropertyChanged("Preguntas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResultadosByEvaluacion(ResultadosByEvaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Resultados = this;
		}
		
		private void detach_ResultadosByEvaluacion(ResultadosByEvaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Resultados = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultadosByEvaluacion")]
	public partial class ResultadosByEvaluacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdResultadosbyPregunta;
		
		private int _IdResultado;
		
		private int _IdEvaluacion;
		
		private EntityRef<Evaluacion> _Evaluacion;
		
		private EntityRef<Resultados> _Resultados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdResultadosbyPreguntaChanging(int value);
    partial void OnIdResultadosbyPreguntaChanged();
    partial void OnIdResultadoChanging(int value);
    partial void OnIdResultadoChanged();
    partial void OnIdEvaluacionChanging(int value);
    partial void OnIdEvaluacionChanged();
    #endregion
		
		public ResultadosByEvaluacion()
		{
			this._Evaluacion = default(EntityRef<Evaluacion>);
			this._Resultados = default(EntityRef<Resultados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdResultadosbyPregunta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdResultadosbyPregunta
		{
			get
			{
				return this._IdResultadosbyPregunta;
			}
			set
			{
				if ((this._IdResultadosbyPregunta != value))
				{
					this.OnIdResultadosbyPreguntaChanging(value);
					this.SendPropertyChanging();
					this._IdResultadosbyPregunta = value;
					this.SendPropertyChanged("IdResultadosbyPregunta");
					this.OnIdResultadosbyPreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdResultado", DbType="Int NOT NULL")]
		public int IdResultado
		{
			get
			{
				return this._IdResultado;
			}
			set
			{
				if ((this._IdResultado != value))
				{
					if (this._Resultados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdResultadoChanging(value);
					this.SendPropertyChanging();
					this._IdResultado = value;
					this.SendPropertyChanged("IdResultado");
					this.OnIdResultadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvaluacion", DbType="Int NOT NULL")]
		public int IdEvaluacion
		{
			get
			{
				return this._IdEvaluacion;
			}
			set
			{
				if ((this._IdEvaluacion != value))
				{
					if (this._Evaluacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEvaluacionChanging(value);
					this.SendPropertyChanging();
					this._IdEvaluacion = value;
					this.SendPropertyChanged("IdEvaluacion");
					this.OnIdEvaluacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluacion_ResultadosByEvaluacion", Storage="_Evaluacion", ThisKey="IdEvaluacion", OtherKey="IdEvaluacion", IsForeignKey=true)]
		public Evaluacion Evaluacion
		{
			get
			{
				return this._Evaluacion.Entity;
			}
			set
			{
				Evaluacion previousValue = this._Evaluacion.Entity;
				if (((previousValue != value) 
							|| (this._Evaluacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Evaluacion.Entity = null;
						previousValue.ResultadosByEvaluacion.Remove(this);
					}
					this._Evaluacion.Entity = value;
					if ((value != null))
					{
						value.ResultadosByEvaluacion.Add(this);
						this._IdEvaluacion = value.IdEvaluacion;
					}
					else
					{
						this._IdEvaluacion = default(int);
					}
					this.SendPropertyChanged("Evaluacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resultados_ResultadosByEvaluacion", Storage="_Resultados", ThisKey="IdResultado", OtherKey="IdResultados", IsForeignKey=true)]
		public Resultados Resultados
		{
			get
			{
				return this._Resultados.Entity;
			}
			set
			{
				Resultados previousValue = this._Resultados.Entity;
				if (((previousValue != value) 
							|| (this._Resultados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resultados.Entity = null;
						previousValue.ResultadosByEvaluacion.Remove(this);
					}
					this._Resultados.Entity = value;
					if ((value != null))
					{
						value.ResultadosByEvaluacion.Add(this);
						this._IdResultado = value.IdResultados;
					}
					else
					{
						this._IdResultado = default(int);
					}
					this.SendPropertyChanged("Resultados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdRol;
		
		private string _Rol;
		
		private EntitySet<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRolChanging(int value);
    partial void OnIdRolChanged();
    partial void OnRolChanging(string value);
    partial void OnRolChanged();
    #endregion
		
		public Roles()
		{
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdRol
		{
			get
			{
				return this._IdRol;
			}
			set
			{
				if ((this._IdRol != value))
				{
					this.OnIdRolChanging(value);
					this.SendPropertyChanging();
					this._IdRol = value;
					this.SendPropertyChanged("IdRol");
					this.OnIdRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Usuarios", Storage="_Usuarios", ThisKey="IdRol", OtherKey="IdRol")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AyudaByPregunta")]
	public partial class AyudaByPregunta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAyuda;
		
		private int _IdPregunta;
		
		private string _Descripcion;
		
		private System.Nullable<bool> _PEI;
		
		private System.Nullable<bool> _PMI;
		
		private System.Nullable<bool> _Manual_de_Convivencia;
		
		private System.Nullable<bool> _Planes_de_Estudio;
		
		private EntityRef<Preguntas> _Preguntas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAyudaChanging(int value);
    partial void OnIdAyudaChanged();
    partial void OnIdPreguntaChanging(int value);
    partial void OnIdPreguntaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPEIChanging(System.Nullable<bool> value);
    partial void OnPEIChanged();
    partial void OnPMIChanging(System.Nullable<bool> value);
    partial void OnPMIChanged();
    partial void OnManual_de_ConvivenciaChanging(System.Nullable<bool> value);
    partial void OnManual_de_ConvivenciaChanged();
    partial void OnPlanes_de_EstudioChanging(System.Nullable<bool> value);
    partial void OnPlanes_de_EstudioChanged();
    #endregion
		
		public AyudaByPregunta()
		{
			this._Preguntas = default(EntityRef<Preguntas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAyuda", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAyuda
		{
			get
			{
				return this._IdAyuda;
			}
			set
			{
				if ((this._IdAyuda != value))
				{
					this.OnIdAyudaChanging(value);
					this.SendPropertyChanging();
					this._IdAyuda = value;
					this.SendPropertyChanged("IdAyuda");
					this.OnIdAyudaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPregunta", DbType="Int NOT NULL")]
		public int IdPregunta
		{
			get
			{
				return this._IdPregunta;
			}
			set
			{
				if ((this._IdPregunta != value))
				{
					if (this._Preguntas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPreguntaChanging(value);
					this.SendPropertyChanging();
					this._IdPregunta = value;
					this.SendPropertyChanged("IdPregunta");
					this.OnIdPreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEI", DbType="Bit")]
		public System.Nullable<bool> PEI
		{
			get
			{
				return this._PEI;
			}
			set
			{
				if ((this._PEI != value))
				{
					this.OnPEIChanging(value);
					this.SendPropertyChanging();
					this._PEI = value;
					this.SendPropertyChanged("PEI");
					this.OnPEIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMI", DbType="Bit")]
		public System.Nullable<bool> PMI
		{
			get
			{
				return this._PMI;
			}
			set
			{
				if ((this._PMI != value))
				{
					this.OnPMIChanging(value);
					this.SendPropertyChanging();
					this._PMI = value;
					this.SendPropertyChanged("PMI");
					this.OnPMIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Manual de Convivencia]", Storage="_Manual_de_Convivencia", DbType="Bit")]
		public System.Nullable<bool> Manual_de_Convivencia
		{
			get
			{
				return this._Manual_de_Convivencia;
			}
			set
			{
				if ((this._Manual_de_Convivencia != value))
				{
					this.OnManual_de_ConvivenciaChanging(value);
					this.SendPropertyChanging();
					this._Manual_de_Convivencia = value;
					this.SendPropertyChanged("Manual_de_Convivencia");
					this.OnManual_de_ConvivenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Planes de Estudio]", Storage="_Planes_de_Estudio", DbType="Bit")]
		public System.Nullable<bool> Planes_de_Estudio
		{
			get
			{
				return this._Planes_de_Estudio;
			}
			set
			{
				if ((this._Planes_de_Estudio != value))
				{
					this.OnPlanes_de_EstudioChanging(value);
					this.SendPropertyChanging();
					this._Planes_de_Estudio = value;
					this.SendPropertyChanged("Planes_de_Estudio");
					this.OnPlanes_de_EstudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preguntas_AyudaByPregunta", Storage="_Preguntas", ThisKey="IdPregunta", OtherKey="IdPregunta", IsForeignKey=true)]
		public Preguntas Preguntas
		{
			get
			{
				return this._Preguntas.Entity;
			}
			set
			{
				Preguntas previousValue = this._Preguntas.Entity;
				if (((previousValue != value) 
							|| (this._Preguntas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Preguntas.Entity = null;
						previousValue.AyudaByPregunta.Remove(this);
					}
					this._Preguntas.Entity = value;
					if ((value != null))
					{
						value.AyudaByPregunta.Add(this);
						this._IdPregunta = value.IdPregunta;
					}
					else
					{
						this._IdPregunta = default(int);
					}
					this.SendPropertyChanged("Preguntas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Componentes")]
	public partial class Componentes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdComponente;
		
		private System.Nullable<int> _IdProceso;
		
		private string _Componente;
		
		private EntitySet<Preguntas> _Preguntas;
		
		private EntityRef<Procesos> _Procesos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdComponenteChanging(int value);
    partial void OnIdComponenteChanged();
    partial void OnIdProcesoChanging(System.Nullable<int> value);
    partial void OnIdProcesoChanged();
    partial void OnComponenteChanging(string value);
    partial void OnComponenteChanged();
    #endregion
		
		public Componentes()
		{
			this._Preguntas = new EntitySet<Preguntas>(new Action<Preguntas>(this.attach_Preguntas), new Action<Preguntas>(this.detach_Preguntas));
			this._Procesos = default(EntityRef<Procesos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdComponente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdComponente
		{
			get
			{
				return this._IdComponente;
			}
			set
			{
				if ((this._IdComponente != value))
				{
					this.OnIdComponenteChanging(value);
					this.SendPropertyChanging();
					this._IdComponente = value;
					this.SendPropertyChanged("IdComponente");
					this.OnIdComponenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProceso", DbType="Int")]
		public System.Nullable<int> IdProceso
		{
			get
			{
				return this._IdProceso;
			}
			set
			{
				if ((this._IdProceso != value))
				{
					if (this._Procesos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProcesoChanging(value);
					this.SendPropertyChanging();
					this._IdProceso = value;
					this.SendPropertyChanged("IdProceso");
					this.OnIdProcesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Componente", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Componente
		{
			get
			{
				return this._Componente;
			}
			set
			{
				if ((this._Componente != value))
				{
					this.OnComponenteChanging(value);
					this.SendPropertyChanging();
					this._Componente = value;
					this.SendPropertyChanged("Componente");
					this.OnComponenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Componentes_Preguntas", Storage="_Preguntas", ThisKey="IdComponente", OtherKey="IdComponente")]
		public EntitySet<Preguntas> Preguntas
		{
			get
			{
				return this._Preguntas;
			}
			set
			{
				this._Preguntas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Procesos_Componentes", Storage="_Procesos", ThisKey="IdProceso", OtherKey="IdProceso", IsForeignKey=true)]
		public Procesos Procesos
		{
			get
			{
				return this._Procesos.Entity;
			}
			set
			{
				Procesos previousValue = this._Procesos.Entity;
				if (((previousValue != value) 
							|| (this._Procesos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Procesos.Entity = null;
						previousValue.Componentes.Remove(this);
					}
					this._Procesos.Entity = value;
					if ((value != null))
					{
						value.Componentes.Add(this);
						this._IdProceso = value.IdProceso;
					}
					else
					{
						this._IdProceso = default(Nullable<int>);
					}
					this.SendPropertyChanged("Procesos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Preguntas(Preguntas entity)
		{
			this.SendPropertyChanging();
			entity.Componentes = this;
		}
		
		private void detach_Preguntas(Preguntas entity)
		{
			this.SendPropertyChanging();
			entity.Componentes = null;
		}
	}
}
#pragma warning restore 1591
